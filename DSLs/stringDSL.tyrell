value Regex;
value String; value Number; value Bool; value Empty;

# Input/output type of the synthesized program:
program Validate(String) -> Bool;

# Production rules:
func len: Number -> String;

func le: Bool -> Number, Value;
func ge: Bool -> Number, Value;

func empty: Empty -> Empty;
func re:     Regex -> Char;

func concat: Regex -> Regex, Regex;
func union:  Regex -> Regex, Regex;
func copies: Regex -> Regex, NumCopies;
func kleene: Regex s -> Regex r;
func posit:  Regex s -> Regex r;
func interr: Regex s -> Regex r;

func match: Bool -> Regex, String;

# predicate is_commutative(union);

predicate is_not_parent(kleene, kleene);
predicate is_not_parent(interr, interr);
predicate is_not_parent(posit,  posit);

predicate is_not_parent(kleene, posit);
predicate is_not_parent(kleene, interr);
predicate is_not_parent(posit,  kleene);
predicate is_not_parent(posit,  interr);
predicate is_not_parent(interr, kleene);
predicate is_not_parent(interr, posit);


